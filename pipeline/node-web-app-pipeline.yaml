apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: node-web-app-pipeline
  namespace: node-web-project
  labels:
    app: node
    component: tekton
spec:
  params:
    - name: url
    - name: revision
    - name: image
    - name: deployment_environment
    - name: path-to-docker-file
    - name: path-to-yaml
    - name: path-to-yaml-image
    - name: git-user
    - name: git-email
  workspaces:
    - name: git-source
    - name: input
  tasks:
    - name: fetch-from-git
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.revision)
      workspaces:
        - name: output
          workspace: git-source
    - name: build-image
      taskRef:
        name: kaniko
      params:
        - name: IMAGE
          value: $(params.image)
        - name: DOCKERFILE
          value: $(params.path-to-docker-file)
      workspaces:
        - name: source
          workspace: git-source
      runAfter:
        - fetch-from-git
    - name: replace-image
      taskRef:
        name: update-image-in-yaml
      params:
        - name: path
          value: $(params.path-to-yaml)
        - name: yamlPathToImage
          value: $(params.path-to-yaml-image)
        - name: image
          value: $(params.image)
      workspaces:
        - name: source
          workspace: git-source
      runAfter:
        - build-image
    - name: push-changes-to-git
      taskRef:
        name: git-cli
      workspaces:
        - name: source
          workspace: git-source
        - name: input
          workspace: input
      params:
        - name: GIT_USER_NAME
          value: $(params.git-user)
        - name: GIT_USER_EMAIL
          value: $(params.git-email)
        - name: GIT_SCRIPT
          value: |
            git add .
            git commit -m 'Update deployment image'
            git push
      runAfter:
        - replace-image
    - name: argocd-sync-deployment
      params:
        - name: application-name
          value: $(params.deployment_environment)
        - name: flags
          value: '--insecure'
        - name: argocd-version
          value: v1.5.2
      runAfter:
        - push-changes-to-git
      taskRef:
        kind: Task
        name: argocd-task-sync-and-wait